filter(ORD_STRA > 5)
mapper(ireland,"Ireland") +
geom_sf(data = main_rivers_ireland, color = "blue", size = 0.5)
main_rivers_ireland <- rivers_ireland %>%
filter(ORD_STRA > 3)
mapper(ireland,"Ireland") +
geom_sf(data = main_rivers_ireland, color = "blue", size = 0.5)
# ----- Danger Zone
danger_zone <- st_buffer(main_rivers_ireland, dist = 1000) # Distance in meters (1 km)
danger_zone <- st_union(danger_zone) # Combine overlapping buffers into one polygon
danger_zone <- st_make_valid(danger_zone) # Ensure the geometry is valid
mapper(ireland,"Ireland") +
geom_sf(data = main_rivers_ireland, color = "blue", size = 0.5) +
geom_sf(data = danger_zone, fill = "red", alpha = 0.4, color = NA)
# ----- Map
map <- mapper(ireland,"Ireland") +
geom_sf(data = main_rivers_ireland, color = "blue", size = 0.5) +
geom_sf(data = danger_zone, fill = "red", alpha = 0.4, color = NA)
county_name <- "Galway"
county <- ireland %>% filter(name == county_name)
county_rivers <- st_crop(main_rivers_ireland, county_bbox)
county_bbox <- st_bbox(county)
ireland
View(ireland)
county <- ireland %>% filter(name == county_name)
ireland
county <- ireland %>% filter(county == county_name)
county_bbox <- st_bbox(county)
county_rivers <- st_crop(main_rivers_ireland, county_bbox)
county_danger_zone <- st_crop(danger_zone, county_bbox)
mapper(county, county_name)
county_map <- mapper(county, county_name) +
geom_sf(data = rivers_galway, color = "blue", size = 0.5) +
geom_sf(data = danger_zone_galway, fill = "red", alpha = 0.4, color = NA) +
ggtitle(paste0("Zoomed-In View of County",county_name))
county_map <- mapper(county, county_name) +
geom_sf(data = county_rivers, color = "blue", size = 0.5) +
geom_sf(data = county_danger_zone, fill = "red", alpha = 0.4, color = NA) +
ggtitle(paste0("Zoomed-In View of County",county_name))
county_map
map + coord_sf(
xlim = c(county_bbox["xmin"], county_bbox["xmax"]),
ylim = c(county_bbox["ymin"], county_bbox["ymax"]),
expand = FALSE # Prevent automatic expansion of limits
)
# ----- ZOOM
county_name <- "Galway"
county <- ireland %>% filter(county == county_name)
county_bbox <- st_bbox(county)
map + coord_sf(
xlim = c(county_bbox["xmin"], county_bbox["xmax"]),
ylim = c(county_bbox["ymin"], county_bbox["ymax"]),
expand = FALSE # Prevent automatic expansion of limits
)
# ----- Danger Zone
danger_zone <- st_buffer(main_rivers_ireland, dist = 5000) # Distance in meters (1 km)
danger_zone <- st_union(danger_zone) # Combine overlapping buffers into one polygon
danger_zone <- st_make_valid(danger_zone) # Ensure the geometry is valid
# ----- Map
map <- mapper(ireland,"Ireland") +
geom_sf(data = main_rivers_ireland, color = "blue", size = 0.5) +
geom_sf(data = danger_zone, fill = "red", alpha = 0.4, color = NA)
# ----- ZOOM
county_name <- "Galway"
county <- ireland %>% filter(county == county_name)
county_bbox <- st_bbox(county)
county_map <- map + coord_sf(
xlim = c(county_bbox["xmin"], county_bbox["xmax"]),
ylim = c(county_bbox["ymin"], county_bbox["ymax"]),
expand = FALSE # Prevent automatic expansion of limits
)
county_map
# ----- Danger Zone
danger_zone <- st_buffer(main_rivers_ireland, dist = 3000) # Distance in meters (1 km)
danger_zone <- st_union(danger_zone) # Combine overlapping buffers into one polygon
danger_zone <- st_make_valid(danger_zone) # Ensure the geometry is valid
# ----- Map
map <- mapper(ireland,"Ireland") +
geom_sf(data = main_rivers_ireland, color = "blue", size = 0.5) +
geom_sf(data = danger_zone, fill = "red", alpha = 0.4, color = NA)
# ----- ZOOM
county_name <- "Galway"
county <- ireland %>% filter(county == county_name)
county_bbox <- st_bbox(county)
county_map <- map + coord_sf(
xlim = c(county_bbox["xmin"], county_bbox["xmax"]),
ylim = c(county_bbox["ymin"], county_bbox["ymax"]),
expand = FALSE # Prevent automatic expansion of limits
)
county_map
# ----- Coastal Danger Zone
ireland_boundary <- st_boundary(ireland)
coastline <- ireland_boundary
coastal_danger_zone <- st_buffer(coastline, dist = -1000) # Negative buffer goes inland
coastal_danger_zone <- st_union(coastal_danger_zone) # Merge all coastal buffers
coastal_danger_zone <- st_make_valid(coastal_danger_zone)
# ----- Map
map <- mapper(ireland,"Ireland") +
geom_sf(data = main_rivers_ireland, color = "blue", size = 0.5) +
geom_sf(data = danger_zone, fill = "orange", alpha = 0.4, color = NA) +
geom_sf(data = coastal_danger_zone, fill = "yellow", alpha = 0.4, color = NA)
# ----- ZOOM
county_name <- "Galway"
county <- ireland %>% filter(county == county_name)
county_bbox <- st_bbox(county)
county_map <- map + coord_sf(
xlim = c(county_bbox["xmin"], county_bbox["xmax"]),
ylim = c(county_bbox["ymin"], county_bbox["ymax"]),
expand = FALSE # Prevent automatic expansion of limits
)
county_map
coastal_danger_zone <- st_buffer(coastline, dist = 2000) # Negative buffer goes inland
coastal_danger_zone <- st_union(coastal_danger_zone) # Merge all coastal buffers
coastal_danger_zone <- st_make_valid(coastal_danger_zone)
# ----- Map
map <- mapper(ireland,"Ireland") +
geom_sf(data = main_rivers_ireland, color = "blue", size = 0.5) +
geom_sf(data = danger_zone, fill = "orange", alpha = 0.4, color = NA) +
geom_sf(data = coastal_danger_zone, fill = "yellow", alpha = 0.4, color = NA)
# ----- ZOOM
county_name <- "Galway"
county <- ireland %>% filter(county == county_name)
county_bbox <- st_bbox(county)
county_map <- map + coord_sf(
xlim = c(county_bbox["xmin"], county_bbox["xmax"]),
ylim = c(county_bbox["ymin"], county_bbox["ymax"]),
expand = FALSE # Prevent automatic expansion of limits
)
county_map
county_map <- map + coord_sf(
xlim = c(county_bbox["xmin"], county_bbox["xmax"]),
ylim = c(county_bbox["ymin"], county_bbox["ymax"]),
expand = FALSE # Prevent automatic expansion of limits
) +
ggtitle(county_name)
county_map
# ----- Coastal Danger Zone
ireland_dissolved <- st_union(ireland)
coastline <- st_boundary(ireland_dissolved)
coastal_danger_zone <- st_buffer(coastline, dist = 2000) # Negative buffer goes inland
coastal_danger_zone <- st_union(coastal_danger_zone) # Merge all coastal buffers
coastal_danger_zone <- st_make_valid(coastal_danger_zone)
# ----- Map
map <- mapper(ireland,"Ireland") +
geom_sf(data = main_rivers_ireland, color = "blue", size = 0.5) +
geom_sf(data = danger_zone, fill = "orange", alpha = 0.4, color = NA) +
geom_sf(data = coastal_danger_zone, fill = "yellow", alpha = 0.4, color = NA)
# ----- ZOOM
county_name <- "Galway"
county <- ireland %>% filter(county == county_name)
county_bbox <- st_bbox(county)
county_map <- map + coord_sf(
xlim = c(county_bbox["xmin"], county_bbox["xmax"]),
ylim = c(county_bbox["ymin"], county_bbox["ymax"]),
expand = FALSE # Prevent automatic expansion of limits
) +
ggtitle(county_name)
county_map
# ----- ZOOM
county_name <- "Dublin"
county <- ireland %>% filter(county == county_name)
county_bbox <- st_bbox(county)
county_map <- map + coord_sf(
xlim = c(county_bbox["xmin"], county_bbox["xmax"]),
ylim = c(county_bbox["ymin"], county_bbox["ymax"]),
expand = FALSE # Prevent automatic expansion of limits
) +
ggtitle(county_name)
county_map
# ----- Coastal Danger Zone
ireland_dissolved <- st_combine(ireland)
coastline <- st_boundary(ireland_dissolved)
coastal_danger_zone <- st_buffer(coastline, dist = 2000) # Negative buffer goes inland
coastal_danger_zone <- st_union(coastal_danger_zone) # Merge all coastal buffers
coastal_danger_zone <- st_make_valid(coastal_danger_zone)
# ----- Map
map <- mapper(ireland,"Ireland") +
geom_sf(data = main_rivers_ireland, color = "blue", size = 0.5) +
geom_sf(data = danger_zone, fill = "orange", alpha = 0.4, color = NA) +
geom_sf(data = coastal_danger_zone, fill = "yellow", alpha = 0.4, color = NA)
# ----- ZOOM
county_name <- "Dublin"
county <- ireland %>% filter(county == county_name)
county_bbox <- st_bbox(county)
county_map <- map + coord_sf(
xlim = c(county_bbox["xmin"], county_bbox["xmax"]),
ylim = c(county_bbox["ymin"], county_bbox["ymax"]),
expand = FALSE # Prevent automatic expansion of limits
) +
ggtitle(county_name)
county_map
# ----- Coastal Danger Zone
ireland_dissolved <- st_union(ireland)
ireland_dissolved <- st_make_valid(ireland_dissolved)
coastline <- st_boundary(ireland_dissolved)
coastal_danger_zone <- st_buffer(coastline, dist = 2000) # Negative buffer goes inland
coastal_danger_zone <- st_union(coastal_danger_zone) # Merge all coastal buffers
coastal_danger_zone <- st_make_valid(coastal_danger_zone)
# ----- Map
map <- mapper(ireland,"Ireland") +
geom_sf(data = main_rivers_ireland, color = "blue", size = 0.5) +
geom_sf(data = danger_zone, fill = "orange", alpha = 0.4, color = NA) +
geom_sf(data = coastal_danger_zone, fill = "yellow", alpha = 0.4, color = NA)
# ----- ZOOM
county_name <- "Dublin"
county <- ireland %>% filter(county == county_name)
county_bbox <- st_bbox(county)
county_map <- map + coord_sf(
xlim = c(county_bbox["xmin"], county_bbox["xmax"]),
ylim = c(county_bbox["ymin"], county_bbox["ymax"]),
expand = FALSE # Prevent automatic expansion of limits
) +
ggtitle(county_name)
county_map
coastal_danger_zone <- st_buffer(coastline, dist = 1000) # Negative buffer goes inland
coastal_danger_zone <- st_union(coastal_danger_zone) # Merge all coastal buffers
coastal_danger_zone <- st_make_valid(coastal_danger_zone)
# ----- Map
map <- mapper(ireland,"Ireland") +
geom_sf(data = main_rivers_ireland, color = "blue", size = 0.5) +
geom_sf(data = danger_zone, fill = "orange", alpha = 0.4, color = NA) +
geom_sf(data = coastal_danger_zone, fill = "yellow", alpha = 0.4, color = NA)
# ----- ZOOM
county_name <- "Dublin"
county <- ireland %>% filter(county == county_name)
county_bbox <- st_bbox(county)
county_map <- map + coord_sf(
xlim = c(county_bbox["xmin"], county_bbox["xmax"]),
ylim = c(county_bbox["ymin"], county_bbox["ymax"]),
expand = FALSE # Prevent automatic expansion of limits
) +
ggtitle(county_name)
county_map
map
file_path <- "C:/Users/Admin/OneDrive/Documents/GitHub/HazMap/www/sample_dataframe_ireland.csv"
sample_data <- read.csv(file_path, stringsAsFactors = FALSE)
sample_data
map
for (file in list.files("script", pattern = "\\.R$", full.names = TRUE)) {source(file)}
# ----- Region
ireland <- ireland_shapefile()
ireland_bbox <- st_bbox(ireland)
mapper(ireland,"Ireland")
# ----- Rivers
#https://www.hydrosheds.org/products/hydrorivers#downloads
link_to_river_shapefile <- "C:/Users/Admin/OneDrive/Documents/GitHub/HazMap/www/HydroRIVERS_v10_eu_shp/HydroRIVERS_v10_eu_shp/HydroRIVERS_v10_eu.shp"
rivers <- st_read(link_to_river_shapefile)
rivers_ireland <- st_crop(rivers, ireland_bbox)
main_rivers_ireland <- rivers_ireland %>%
filter(ORD_STRA > 3)
# ----- River Danger Zone
danger_zone <- st_buffer(main_rivers_ireland, dist = 3000) # Distance in meters (1 km)
danger_zone <- st_union(danger_zone) # Combine overlapping buffers into one polygon
danger_zone <- st_make_valid(danger_zone) # Ensure the geometry is valid
# ----- Coastal Danger Zone
ireland_dissolved <- st_union(ireland)
ireland_dissolved <- st_make_valid(ireland_dissolved)
coastline <- st_boundary(ireland_dissolved)
coastal_danger_zone <- st_buffer(coastline, dist = 1000) # Negative buffer goes inland
coastal_danger_zone <- st_union(coastal_danger_zone) # Merge all coastal buffers
coastal_danger_zone <- st_make_valid(coastal_danger_zone)
# ----- Map
map <- mapper(ireland,"Ireland") +
geom_sf(data = main_rivers_ireland, color = "blue", size = 0.5) +
geom_sf(data = danger_zone, fill = "orange", alpha = 0.4, color = NA) +
geom_sf(data = coastal_danger_zone, fill = "yellow", alpha = 0.4, color = NA)
map
library(leaflet)
library(leaflet)
# Create the map
leaflet(sample_data) %>%
addTiles() %>%  # Adds a basic map layer
addCircleMarkers(
lng = ~longitude,  # Longitude from the data
lat = ~latitude,   # Latitude from the data
popup = ~paste("Category 1:", category_1, "<br>",
"Category 2:", category_2, "<br>",
"Premium:", premium, "<br>",
"Sum Insured:", sum_insured),
radius = 5,        # Adjust marker size
color = "blue",
fillOpacity = 0.7
) %>%
setView(lng = -8, lat = 53.5, zoom = 6)  #
# Create the map
leaflet(sample_data) %>%
addTiles() %>%  # Adds a basic map layer
addCircleMarkers(
lng = ~longitude,  # Longitude from the data
lat = ~latitude,   # Latitude from the data
popup = ~paste("Category 1:", category_1, "<br>",
"Category 2:", category_2, "<br>",
"Premium:", premium, "<br>",
"Sum Insured:", sum_insured),
radius = 5,        # Adjust marker size
color = "blue",
fillOpacity = 0.7
) %>%
setView(lng = -8, lat = 53.5, zoom = 8)  #
sample_data <- read.csv(file_path, stringsAsFactors = FALSE)
View(sample_data)
# Create the map
sample_map <- sample_data %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng = ~longitude,
lat = ~latitude,
popup = ~paste("Policy Id:", policy_id, "<br>",
"Category 1:", category_1, "<br>",
"Category 2:", category_2, "<br>",
"Premium:", premium, "<br>",
"Sum Insured:", sum_insured),
radius = 5,
color = "blue",
fillOpacity = 0.7
) %>%
setView(lng = -8, lat = 53.5, zoom = 8)
sample_map
sample_map_2 <- map +
geom_point(
data = sample_data,
aes(x = longitude, y = latitude, color = category_1, shape = category_2),
size = 2,
alpha = 0.7
) +
scale_color_manual(values = c("personal" = "blue", "commercial" = "red")) +
theme_minimal() +
labs(
title = "Sample Data Points on Ireland Map",
subtitle = "Categorized by Category 1 and Category 2",
x = "Longitude",
y = "Latitude",
color = "Category 1",
shape = "Category 2"
)
sample_map_2
danger_zone
View(danger_zone)
points_in_danger <- sample_data %>%
filter(st_within(geometry, danger_zone, sparse = FALSE))
danger_zone
sample_data
sample_data
points_in_danger <- sample_data %>%
filter(st_within(geometry, danger_zone, sparse = FALSE))
# -----------what points fall in the dangerzone
sample_data_sf <- st_as_sf(sample_data, coords = c("longitude", "latitude"), crs = 4326)
danger_zone2 <- st_sfc(your_multipolygon, crs = 4326)
danger_zone2 <- st_sfc(danger_zone, crs = 4326)
View(danger_zone2)
points_in_danger <- sample_data %>%
filter(st_within(geometry, danger_zone, sparse = FALSE))
points_in_danger <- sample_data_sf %>%
filter(st_within(geometry, danger_zone, sparse = FALSE))
points_in_danger
# View the points that are within the danger zone
print(points_in_danger)
st_crs(danger_zone)
st_crs(danger_zone)
sample_map <- points_in_danger %>%  # sample_data , points_in_danger
leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng = ~longitude,
lat = ~latitude,
popup = ~paste("Policy Id:", policy_id, "<br>",
"Category 1:", category_1, "<br>",
"Category 2:", category_2, "<br>",
"Premium:", premium, "<br>",
"Sum Insured:", sum_insured),
radius = 5,
color = "blue",
fillOpacity = 0.7
) %>%
setView(lng = -8, lat = 53.5, zoom = 8)
sample_map
points_in_danger
sample_map <- points_in_danger %>%  # sample_data , points_in_danger
leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng = ~longitude,
lat = ~latitude,
popup = ~paste("Policy Id:", policy_id, "<br>",
"Category 1:", category_1, "<br>",
"Category 2:", category_2, "<br>",
"Premium:", premium, "<br>",
"Sum Insured:", sum_insured),
radius = 5,
color = "blue",
fillOpacity = 0.7
) %>%
setView(lng = -8, lat = 53.5, zoom = 8)
sample_data_sf <- sample_data %>%
mutate(longitude_orig = longitude,
latitude_orig = latitude) %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326)
sample_data_sf
# -----------what points fall in the dangerzone
sample_data_sf <- sample_data %>%
mutate(longitude_orig = longitude,
latitude_orig = latitude) %>%
st_as_sf(coords = c("longitude_orig", "latitude_orig"), crs = 4326)
sample_data_sf
sample_map <- points_in_danger %>%  # sample_data , points_in_danger
leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng = ~longitude,
lat = ~latitude,
popup = ~paste("Policy Id:", policy_id, "<br>",
"Category 1:", category_1, "<br>",
"Category 2:", category_2, "<br>",
"Premium:", premium, "<br>",
"Sum Insured:", sum_insured),
radius = 5,
color = "blue",
fillOpacity = 0.7
) %>%
setView(lng = -8, lat = 53.5, zoom = 8)
# -----------what points fall in the dangerzone
sample_data_sf <- sample_data %>%
mutate(longitude_orig = longitude,
latitude_orig = latitude) %>%
st_as_sf(coords = c("longitude_orig", "latitude_orig"), crs = 4326)
points_in_danger <- sample_data_sf %>%  filter(st_within(geometry, danger_zone, sparse = FALSE))
sample_map <- points_in_danger %>%  # sample_data , points_in_danger
leaflet() %>%
addTiles() %>%
addCircleMarkers(
lng = ~longitude,
lat = ~latitude,
popup = ~paste("Policy Id:", policy_id, "<br>",
"Category 1:", category_1, "<br>",
"Category 2:", category_2, "<br>",
"Premium:", premium, "<br>",
"Sum Insured:", sum_insured),
radius = 5,
color = "blue",
fillOpacity = 0.7
) %>%
setView(lng = -8, lat = 53.5, zoom = 8)
sample_map
sample_map_2 <- map +
geom_point(
data = points_in_danger,
aes(x = longitude, y = latitude, color = category_1, shape = category_2),
size = 2,
alpha = 0.7
) +
scale_color_manual(values = c("personal" = "blue", "commercial" = "red")) +
theme_minimal() +
labs(
title = "Sample Data Points on Ireland Map",
subtitle = "Categorized by Category 1 and Category 2",
x = "Longitude",
y = "Latitude",
color = "Category 1",
shape = "Category 2"
)
sample_map_2
points_in_flood_danger <- sample_data_sf %>%
filter(
lengths(st_within(geometry, danger_zone)) > 0 |
lengths(st_within(geometry, coastal_danger_zone)) > 0
)
sample_map_2 <- map +
geom_point(
data = points_in_flood_danger,
aes(x = longitude, y = latitude, color = category_1, shape = category_2),
size = 2,
alpha = 0.7
) +
scale_color_manual(values = c("personal" = "blue", "commercial" = "red")) +
theme_minimal() +
labs(
title = "Sample Data Points on Ireland Map",
subtitle = "Categorized by Category 1 and Category 2",
x = "Longitude",
y = "Latitude",
color = "Category 1",
shape = "Category 2"
)
sample_map_2
storm_center <- st_sfc(st_point(c(-8.5, 53.5)), crs = 4326)
windstorm_area <- st_buffer(storm_center, dist = units::set_units(50, "km"))
sample_map_3 <- sample_map_2 +
geom_sf(data = windstorm_area, fill = "red", alpha = 0.3)
sample_map_3
policies_hit <- sample_data_sf %>%
filter(st_within(geometry, windstorm_area, sparse = FALSE))
policies_hit
windstorm_area
sample_map_4 <- sample_map_3 +
geom_sf(data = windstorm_area, fill = "red", alpha = 0.3) +  # Windstorm area
geom_sf(data = sample_data_sf, aes(color = "All Policies"), size = 1) +
geom_sf(data = policies_hit, color = "blue", size = 2) +  # Affected policies
labs(title = "Simulated Windstorm and Affected Policies",
subtitle = "Affected policies shown in blue",
color = "Legend") +
theme_minimal()
sample_map_4
sample_map_4 <- sample_map_3 +
geom_sf(data = windstorm_area, fill = "red", alpha = 0.3) +  # Windstorm area
#geom_sf(data = sample_data_sf, aes(color = "All Policies"), size = 1) +
geom_sf(data = policies_hit, color = "blue", size = 2) +  # Affected policies
labs(title = "Simulated Windstorm and Affected Policies",
subtitle = "Affected policies shown in blue",
color = "Legend") +
theme_minimal()
sample_map_4
